"""empty message

Revision ID: 051514430805
Revises: 64eef256cae6
Create Date: 2024-04-20 00:45:40.114315

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '051514430805'
down_revision = '64eef256cae6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('favorites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('restaurant_id', sa.Integer(), nullable=False),
    sa.Column('user_register_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurant.id'], ),
    sa.ForeignKeyConstraint(['user_register_id'], ['user_register.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.drop_table('Favorites')
    with op.batch_alter_table('restaurant', schema=None) as batch_op:
        batch_op.drop_constraint('restaurant_user_register_id_fkey', type_='foreignkey')
        batch_op.drop_column('user_register_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('restaurant', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_register_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('restaurant_user_register_id_fkey', 'user_register', ['user_register_id'], ['id'])

    op.create_table('Favorites',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Favorites_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('uid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('restaurant_name', sa.VARCHAR(length=2000), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='Favorites_pkey'),
    sa.UniqueConstraint('id', name='Favorites_id_key')
    )
    op.drop_table('favorites')
    # ### end Alembic commands ###
